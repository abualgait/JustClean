/*
 * Created by  Muhammad Sayed  on 1/9/21 9:37 AM
 * Copyright (c) JustClean. All rights reserved.
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'androidx.navigation.safeargs'



def apiKeyPropertiesFile = rootProject.file("apikeys.properties")
def apiKeyProperties = new Properties()

apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))
android {
    signingConfigs {
        release {
            try {
                storeFile file(keyStoreRelease)
                keyAlias keyStoreAlias
                storePassword keyStorePass
                keyPassword keyStoreAliasPass
            } catch (ex) {
                throw new InvalidUserDataException("You should define keyStoreAlias, keyStorePass and keyStoreAliasPass in gradle.properties.")
            }
        }

    }
    compileSdkVersion versions.compileSdkVersion
    defaultConfig {
        applicationId "com.justclean.app"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.code
        versionName versions.name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // For vector graphic support
        vectorDrawables.useSupportLibrary = true

        // For multiDex
        multiDexEnabled true

        // annotationProcessor
        android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true

        // Name .apk & .aab file
        archivesBaseName = "${applicationId}-v${versionName}(${versionCode})"


    }
    buildTypes {

        debug {
            minifyEnabled false
            buildConfigField("String", "API_BASE_URL", apiKeyProperties['BASE_URL_DEMO'])
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_BASE_URL", apiKeyProperties['BASE_URL_LIVE'])



        }

    }
    dataBinding {
        enabled = true
        enabledForTests = true
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
    }
    // Java 8 features, i.e Lambda...
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    // solves Error converting bytecode to dex
    dexOptions {
        javaMaxHeapSize "4g"
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/MANIFEST.MF'
    }
    useLibrary 'org.apache.http.legacy'

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //unit-testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'org.koin:koin-test:2.0.1'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    //android-testing
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'

    implementation deps.support.appCompat
    implementation deps.support.compat
    implementation deps.support.materialDesign
    implementation deps.support.preference
    implementation deps.support.cardView

    implementation deps.multidex
    implementation deps.constraintLayout
    implementation deps.parceler
    kapt deps.parcelerAnnotaitionProcessor

    //retrofit
    implementation deps.retrofit.runtime
    implementation deps.retrofit.adapter
    implementation deps.retrofit.converter
    implementation deps.retrofit.converter_moshi
    implementation deps.retrofit.moshi
    implementation deps.retrofit.moshi_kotlin
    kapt deps.retrofit.moshi_kotlin_codegen
    //okHttp
    implementation deps.okHttp.runtime
    implementation deps.okHttp.interceptor

    //rx
    implementation deps.rx.android
    implementation deps.rx.java
    implementation deps.rx.binding
    implementation deps.rx.lifeCycleComponent
    implementation deps.rx.permissions
    implementation deps.rx.kotlin

    implementation deps.intuit.sdp
    implementation deps.intuit.ssp

    implementation deps.archLifecycle.ext
    kapt deps.archLifecycle.commonJava8

    //koin
    implementation deps.koin.android
    implementation deps.koin.scope
    implementation deps.koin.viewmodel
    implementation deps.koin.java
    implementation deps.koin.ext

    implementation deps.arch.fragment
    implementation deps.arch.ui
    implementation deps.arch.fragmentKtx
    implementation deps.arch.uiKtx
    implementation deps.fragmentX

    //room
    implementation deps.room.runtime
    implementation deps.room.rxjava2
    kapt deps.room.proceesor


    implementation deps.google.androidXLegacySupport

    //utility
    implementation deps.flashbar
    implementation deps.picasso
    implementation deps.utility.sneaker
    implementation deps.timber




}


repositories {
    mavenCentral()
}
